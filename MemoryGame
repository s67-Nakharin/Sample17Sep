boolean gameover = false;
boolean gamelock = false;
int[][] grid = {{1, 2, 1, 3}, {3, 4, 1, 2}, {2, 1, 3, 4}};
int rows = grid.length; 
int cols = grid[0].length;
boolean first_click = false;
int row1, col1;

void setup() {
  size(500, 500);
}

void draw() {
  if (!gameover) {
    strokeWeight(2);
    background(255);
    table(cols, rows);
    madeLine();
  }
}

void mousePressed() {
  int clickedCol = mouseX / (width / cols);
  int clickedRow = mouseY / (height / rows);

  if (clickedCol < cols && clickedRow < rows && !gamelock) {
    if (!first_click) {
      first_click = true;
      row1 = clickedRow;
      col1 = clickedCol;
      println("first:" + row1 + ":" + col1);
    } else {
      int row2 = clickedRow;
      int col2 = clickedCol;
      println("second:" + row2 + ":" + col2);
      gamelock = true; 
      match_check(row1, col1, row2, col2);
    }
  }
}

void match_check(int row1, int col1, int row2, int col2) {
  if (grid[row1][col1] == grid[row2][col2]) {
    println("Matched!");
  } else {
    println("Not Matched");
  }
  first_click = false;
  gamelock = false;
}

void table(int colum, int row) {
  for (int i = 1; i <= colum; i++) {
    line(width / colum * i, 0, width / colum * i, height);
  }
  for (int j = 1; j <= row; j++) {
    line(0, height / row * j, width, height / row * j);
  }
}

void draw_lines(int x, int y, int n) {
  int i = 0;
  while (i < n) {
    line(x + i * 20, y, x + i * 20, y + 40);
    i++;
  }
}

void madeLine() {
  int w = width / cols;
  int h = height / rows;
  for (int i = 0; i < rows; i++) {
    for (int j = 0; j < cols; j++) {
      draw_lines(10 + j * w, 10 + i * h, grid[i][j]);
    }
  }
}
