boolean gameover = false;
boolean gamelock = false;
int[][] grid = {{1, 2, 1, 3}, {3, 4, 1, 2}, {2, 1, 3, 4}};
int rows = grid.length; 
int cols = grid[0].length;
boolean first_click = false;
boolean second_click = false;

void setup() {
  size(500, 500); 
  
}

void draw() {
  if (!gameover) {
    strokeWeight(2);
    background(255);
    table(cols, rows);
    madeLine();
    
  }
}

void mousePressed() {
  int clickedCol = mouseX / (width / cols);
  int clickedRow = mouseY / (height / rows);

  if (clickedCol < cols && clickedRow < rows && gamelock == false) {
    if (first_click == false){
      first_click = true;
      int row1 = clickedRow;
      int col1 = clickedCol;
      println("first:"+row1+":"+col1);
    }
    else{
      int row2 = clickedRow;
      int col2 = clickedCol;
      println("second:"+row2+":"+col2);
      gamelock = true;
      //call fnc match check
    }
  }
}

void table(int colum, int row) {
  for (int i = 1; i <= colum; i++) {
    line(width / colum * i, 0, width / colum * i, height);
  }
  for (int j = 1; j <= row; j++) {
    line(0, height / row * j, width, height / row * j);
  }
}


void draw_lines(int x, int y, int n) {
    int i = 0;
    while (i < n) {

        line(x + i * 20, y, x + i * 20, y + 40);
        i++;
    }
}


void madeLine(){
    int w = width / cols;
    int h = height / rows;
    int i = 0;
    while (i < rows) {

        int j = 0;
        while (j < cols) {
            draw_lines(10 + j * w, 10 + i * h, grid[i][j]);
            j++;
        }
        i++;
    }
}
